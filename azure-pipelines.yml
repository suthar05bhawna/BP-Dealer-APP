# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
 vmImage: windows-2022
 
#  variables:
#     buildConfiguration: 'Release'
#     outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'

steps:

- script: 
   echo Hello, world!
  displayName: 'Run a one-line script'
  
- task: CmdLine@2
  inputs:
    script: 'dotnet workload install maui'

- task: DotNetCoreCLI@2
  inputs:
   command: 'build'
   projects: 'DMS.sln'
   arguments: '-c Release -f net7.0-android'
   
- task: CopyFiles@2
  inputs:
        
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        SourceFolder: '$(agent.builddirectory)'
        Contents: '**/*-Signed.apk'
        flattenFolders: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
   
# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'drop'
#     publishLocation: 'Container'
# - task: CopyFiles@2
#   inputs:
#         Contents: |
#           **\**\bin\Release\net7.0-android\publish\*.apk
#           \bin\Release\net7.0-android\publish\*.apk
#         TargetFolder: '$(Build.ArtifactStagingDirectory)'


#- task: PublishBuildArtifacts@1
#  inputs:
#    PathtoPublish: '/bin/' # string. Required. Path to publish. Default: $(Build.ArtifactStagingDirectory).
 #   ArtifactName: 'drop' # string. Required. Artifact name. Default: drop.
 #   publishLocation: 'Container'
  
# - script: 
#    dir
#    cd ./bin/release
#    echo Hello, world!
#   displayName: 'Run a one-line script'


# - script: |
#     echo Add other tasks to build, test, and deploy your project.
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'
